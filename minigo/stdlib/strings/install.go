// Code generated by minigo-gen-bindings. DO NOT EDIT.

package strings

import (
	"strings"
	"github.com/podhmo/go-scan/minigo"
)

// Install binds all exported symbols from the "strings" package to the interpreter.
func Install(interp *minigo.Interpreter, installed map[string]bool) {
	if installed["strings"] {
		return
	}
	installed["strings"] = true

	interp.Register("strings", map[string]any{
		"LastIndex": strings.LastIndex,
		"Fields": strings.Fields,
		"Repeat": strings.Repeat,
		"ToTitle": strings.ToTitle,
		"Clone": strings.Clone,
		"NewReplacer": strings.NewReplacer,
		"ToUpperSpecial": strings.ToUpperSpecial,
		"ToValidUTF8": strings.ToValidUTF8,
		"Title": strings.Title,
		"TrimFunc": strings.TrimFunc,
		"IndexFunc": strings.IndexFunc,
		"CutPrefix": strings.CutPrefix,
		"FieldsFuncSeq": strings.FieldsFuncSeq,
		"Contains": strings.Contains,
		"Split": strings.Split,
		"Compare": strings.Compare,
		"HasSuffix": strings.HasSuffix,
		"ToUpper": strings.ToUpper,
		"Cut": strings.Cut,
		"SplitAfterSeq": strings.SplitAfterSeq,
		"SplitSeq": strings.SplitSeq,
		"NewReader": strings.NewReader,
		"ContainsAny": strings.ContainsAny,
		"ContainsRune": strings.ContainsRune,
		"Map": strings.Map,
		"CutSuffix": strings.CutSuffix,
		"ToTitleSpecial": strings.ToTitleSpecial,
		"TrimRightFunc": strings.TrimRightFunc,
		"TrimSpace": strings.TrimSpace,
		"ReplaceAll": strings.ReplaceAll,
		"FieldsSeq": strings.FieldsSeq,
		"LastIndexByte": strings.LastIndexByte,
		"EqualFold": strings.EqualFold,
		"Index": strings.Index,
		"LastIndexAny": strings.LastIndexAny,
		"TrimLeftFunc": strings.TrimLeftFunc,
		"TrimPrefix": strings.TrimPrefix,
		"IndexByte": strings.IndexByte,
		"SplitAfter": strings.SplitAfter,
		"IndexRune": strings.IndexRune,
		"ToLower": strings.ToLower,
		"ToLowerSpecial": strings.ToLowerSpecial,
		"LastIndexFunc": strings.LastIndexFunc,
		"TrimLeft": strings.TrimLeft,
		"Count": strings.Count,
		"ContainsFunc": strings.ContainsFunc,
		"FieldsFunc": strings.FieldsFunc,
		"Join": strings.Join,
		"TrimSuffix": strings.TrimSuffix,
		"HasPrefix": strings.HasPrefix,
		"IndexAny": strings.IndexAny,
		"SplitN": strings.SplitN,
		"Lines": strings.Lines,
		"SplitAfterN": strings.SplitAfterN,
		"Trim": strings.Trim,
		"TrimRight": strings.TrimRight,
		"Replace": strings.Replace,
	})
}
