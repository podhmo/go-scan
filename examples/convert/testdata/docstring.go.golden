// Code generated by convert. DO NOT EDIT.
package testdata

import (
	"context"
	"errors"
	"fmt"
	"github.com/podhmo/go-scan/examples/convert/model"
)

func convertDocstringSrcToDocstringDst(ctx context.Context, ec *model.ErrorCollector, src *DocstringSrc) *DocstringDst {
	if src == nil {
		return nil
	}
	dst := &DocstringDst{}
	// ID -> ID
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("ID")
	dst.ID = src.ID
	ec.Leave()
	// Name -> Name
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("Name")
	dst.Name = src.Name
	ec.Leave()
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("Optional")
	if src.Optional != nil {
		tmp := *src.Optional
		dst.Optional = &tmp
	} else {
		dst.Optional = nil
	}
	ec.Leave()
	// Required -> Required
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("Required")
	if src.Required == nil {
		ec.Add(fmt.Errorf("Required is required"))
	} else {
		if src.Required != nil {
			tmp := *src.Required
			dst.Required = &tmp
		} else {
			dst.Required = nil
		}
	}
	ec.Leave()
	return dst
}

// ConvertDocstringSrcToDocstringDst converts DocstringSrc to DocstringDst.
func ConvertDocstringSrcToDocstringDst(ctx context.Context, src *DocstringSrc) (*DocstringDst, error) {
	if src == nil {
		return nil, nil
	}
	ec := model.NewErrorCollector(0)
	dst := convertDocstringSrcToDocstringDst(ctx, ec, src)
	if ec.HasErrors() {
		return dst, errors.Join(ec.Errors()...)
	}
	return dst, nil
}
