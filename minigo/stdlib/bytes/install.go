// Code generated by minigo-gen-bindings. DO NOT EDIT.

package bytes

import (
	"bytes"
	"github.com/podhmo/go-scan/minigo"
)

// Install binds all exported symbols from the "bytes" package to the interpreter.
func Install(interp *minigo.Interpreter, installed map[string]bool) {
	if installed["bytes"] {
		return
	}
	installed["bytes"] = true

	interp.Register("bytes", map[string]any{
		"Runes": bytes.Runes,
		"CutSuffix": bytes.CutSuffix,
		"Split": bytes.Split,
		"Repeat": bytes.Repeat,
		"Trim": bytes.Trim,
		"Index": bytes.Index,
		"ContainsFunc": bytes.ContainsFunc,
		"IndexRune": bytes.IndexRune,
		"Map": bytes.Map,
		"ToTitle": bytes.ToTitle,
		"ToTitleSpecial": bytes.ToTitleSpecial,
		"SplitAfter": bytes.SplitAfter,
		"HasSuffix": bytes.HasSuffix,
		"EqualFold": bytes.EqualFold,
		"NewReader": bytes.NewReader,
		"LastIndex": bytes.LastIndex,
		"TrimLeftFunc": bytes.TrimLeftFunc,
		"SplitAfterSeq": bytes.SplitAfterSeq,
		"Compare": bytes.Compare,
		"IndexByte": bytes.IndexByte,
		"TrimSuffix": bytes.TrimSuffix,
		"ReplaceAll": bytes.ReplaceAll,
		"NewBuffer": bytes.NewBuffer,
		"ContainsAny": bytes.ContainsAny,
		"TrimRight": bytes.TrimRight,
		"Clone": bytes.Clone,
		"Lines": bytes.Lines,
		"LastIndexByte": bytes.LastIndexByte,
		"MinRead": bytes.MinRead,
		"TrimRightFunc": bytes.TrimRightFunc,
		"Cut": bytes.Cut,
		"FieldsFuncSeq": bytes.FieldsFuncSeq,
		"TrimFunc": bytes.TrimFunc,
		"IndexFunc": bytes.IndexFunc,
		"Replace": bytes.Replace,
		"Join": bytes.Join,
		"CutPrefix": bytes.CutPrefix,
		"Contains": bytes.Contains,
		"SplitN": bytes.SplitN,
		"HasPrefix": bytes.HasPrefix,
		"FieldsSeq": bytes.FieldsSeq,
		"IndexAny": bytes.IndexAny,
		"FieldsFunc": bytes.FieldsFunc,
		"ToLowerSpecial": bytes.ToLowerSpecial,
		"TrimLeft": bytes.TrimLeft,
		"ContainsRune": bytes.ContainsRune,
		"SplitAfterN": bytes.SplitAfterN,
		"Equal": bytes.Equal,
		"Count": bytes.Count,
		"LastIndexAny": bytes.LastIndexAny,
		"Fields": bytes.Fields,
		"ToValidUTF8": bytes.ToValidUTF8,
		"TrimPrefix": bytes.TrimPrefix,
		"NewBufferString": bytes.NewBufferString,
		"SplitSeq": bytes.SplitSeq,
		"ToLower": bytes.ToLower,
		"ToUpper": bytes.ToUpper,
		"ToUpperSpecial": bytes.ToUpperSpecial,
		"Title": bytes.Title,
		"LastIndexFunc": bytes.LastIndexFunc,
		"TrimSpace": bytes.TrimSpace,
	})
}
