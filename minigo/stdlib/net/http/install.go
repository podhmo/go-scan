// Code generated by minigo-gen-bindings. DO NOT EDIT.

package http

import (
	"net/http"
	"github.com/podhmo/go-scan/minigo"
)

// Install binds all exported symbols from the "net/http" package to the interpreter.
func Install(interp *minigo.Interpreter, installed map[string]bool) {
	if installed["net/http"] {
		return
	}
	installed["net/http"] = true

	interp.Register("net/http", map[string]any{
		"StatusPartialContent": http.StatusPartialContent,
		"StatusNotAcceptable": http.StatusNotAcceptable,
		"StatusInsufficientStorage": http.StatusInsufficientStorage,
		"StateClosed": http.StateClosed,
		"MethodTrace": http.MethodTrace,
		"StatusServiceUnavailable": http.StatusServiceUnavailable,
		"StateActive": http.StateActive,
		"FileServer": http.FileServer,
		"HandleFunc": http.HandleFunc,
		"StatusRequestTimeout": http.StatusRequestTimeout,
		"StatusLocked": http.StatusLocked,
		"DefaultMaxIdleConnsPerHost": http.DefaultMaxIdleConnsPerHost,
		"TimeFormat": http.TimeFormat,
		"StatusRequestHeaderFieldsTooLarge": http.StatusRequestHeaderFieldsTooLarge,
		"ParseCookie": http.ParseCookie,
		"ReadRequest": http.ReadRequest,
		"ListenAndServeTLS": http.ListenAndServeTLS,
		"SameSiteLaxMode": http.SameSiteLaxMode,
		"StatusProxyAuthRequired": http.StatusProxyAuthRequired,
		"StatusLengthRequired": http.StatusLengthRequired,
		"StatusHTTPVersionNotSupported": http.StatusHTTPVersionNotSupported,
		"StatusFound": http.StatusFound,
		"StatusSeeOther": http.StatusSeeOther,
		"StatusConflict": http.StatusConflict,
		"StatusBadGateway": http.StatusBadGateway,
		"StatusContinue": http.StatusContinue,
		"StatusMisdirectedRequest": http.StatusMisdirectedRequest,
		"TrailerPrefix": http.TrailerPrefix,
		"ProxyFromEnvironment": http.ProxyFromEnvironment,
		"StatusMultiStatus": http.StatusMultiStatus,
		"StatusExpectationFailed": http.StatusExpectationFailed,
		"NewFileTransport": http.NewFileTransport,
		"Get": http.Get,
		"DetectContentType": http.DetectContentType,
		"StatusEarlyHints": http.StatusEarlyHints,
		"StatusInternalServerError": http.StatusInternalServerError,
		"StatusNetworkAuthenticationRequired": http.StatusNetworkAuthenticationRequired,
		"DefaultMaxHeaderBytes": http.DefaultMaxHeaderBytes,
		"ParseTime": http.ParseTime,
		"RedirectHandler": http.RedirectHandler,
		"StatusUnauthorized": http.StatusUnauthorized,
		"MethodHead": http.MethodHead,
		"StatusPaymentRequired": http.StatusPaymentRequired,
		"StatusTeapot": http.StatusTeapot,
		"StateNew": http.StateNew,
		"SameSiteDefaultMode": http.SameSiteDefaultMode,
		"StatusNotImplemented": http.StatusNotImplemented,
		"MaxBytesReader": http.MaxBytesReader,
		"StatusCreated": http.StatusCreated,
		"StatusAccepted": http.StatusAccepted,
		"StatusNoContent": http.StatusNoContent,
		"StatusUpgradeRequired": http.StatusUpgradeRequired,
		"StatusVariantAlsoNegotiates": http.StatusVariantAlsoNegotiates,
		"ParseHTTPVersion": http.ParseHTTPVersion,
		"NewServeMux": http.NewServeMux,
		"CanonicalHeaderKey": http.CanonicalHeaderKey,
		"NotFound": http.NotFound,
		"SameSiteStrictMode": http.SameSiteStrictMode,
		"MaxBytesHandler": http.MaxBytesHandler,
		"StatusPreconditionRequired": http.StatusPreconditionRequired,
		"StatusNotExtended": http.StatusNotExtended,
		"StatusText": http.StatusText,
		"StatusProcessing": http.StatusProcessing,
		"StatusUnsupportedMediaType": http.StatusUnsupportedMediaType,
		"StatusLoopDetected": http.StatusLoopDetected,
		"ProxyURL": http.ProxyURL,
		"NotFoundHandler": http.NotFoundHandler,
		"StatusSwitchingProtocols": http.StatusSwitchingProtocols,
		"StatusPermanentRedirect": http.StatusPermanentRedirect,
		"ReadResponse": http.ReadResponse,
		"StripPrefix": http.StripPrefix,
		"MethodDelete": http.MethodDelete,
		"StatusTooManyRequests": http.StatusTooManyRequests,
		"Error": http.Error,
		"Handle": http.Handle,
		"StatusAlreadyReported": http.StatusAlreadyReported,
		"Head": http.Head,
		"MethodGet": http.MethodGet,
		"StatusOK": http.StatusOK,
		"StatusRequestedRangeNotSatisfiable": http.StatusRequestedRangeNotSatisfiable,
		"ServeTLS": http.ServeTLS,
		"StatusUnprocessableEntity": http.StatusUnprocessableEntity,
		"StatusFailedDependency": http.StatusFailedDependency,
		"NewFileTransportFS": http.NewFileTransportFS,
		"ServeContent": http.ServeContent,
		"MethodPut": http.MethodPut,
		"StatusIMUsed": http.StatusIMUsed,
		"Post": http.Post,
		"NewRequestWithContext": http.NewRequestWithContext,
		"StatusNotFound": http.StatusNotFound,
		"StatusRequestURITooLong": http.StatusRequestURITooLong,
		"StatusUnavailableForLegalReasons": http.StatusUnavailableForLegalReasons,
		"AllowQuerySemicolons": http.AllowQuerySemicolons,
		"ListenAndServe": http.ListenAndServe,
		"StatusUseProxy": http.StatusUseProxy,
		"StatusBadRequest": http.StatusBadRequest,
		"SetCookie": http.SetCookie,
		"Serve": http.Serve,
		"StatusNonAuthoritativeInfo": http.StatusNonAuthoritativeInfo,
		"StatusMovedPermanently": http.StatusMovedPermanently,
		"StatusTooEarly": http.StatusTooEarly,
		"StateHijacked": http.StateHijacked,
		"FileServerFS": http.FileServerFS,
		"PostForm": http.PostForm,
		"NewResponseController": http.NewResponseController,
		"TimeoutHandler": http.TimeoutHandler,
		"StatusNotModified": http.StatusNotModified,
		"StatusForbidden": http.StatusForbidden,
		"StatusMethodNotAllowed": http.StatusMethodNotAllowed,
		"NewRequest": http.NewRequest,
		"StatusResetContent": http.StatusResetContent,
		"StatusGone": http.StatusGone,
		"StatusRequestEntityTooLarge": http.StatusRequestEntityTooLarge,
		"StateIdle": http.StateIdle,
		"ServeFileFS": http.ServeFileFS,
		"MethodConnect": http.MethodConnect,
		"FS": http.FS,
		"SameSiteNoneMode": http.SameSiteNoneMode,
		"StatusMultipleChoices": http.StatusMultipleChoices,
		"StatusTemporaryRedirect": http.StatusTemporaryRedirect,
		"StatusPreconditionFailed": http.StatusPreconditionFailed,
		"ParseSetCookie": http.ParseSetCookie,
		"ServeFile": http.ServeFile,
		"Redirect": http.Redirect,
		"MethodPost": http.MethodPost,
		"MethodOptions": http.MethodOptions,
		"MethodPatch": http.MethodPatch,
		"StatusGatewayTimeout": http.StatusGatewayTimeout,
	})
}
