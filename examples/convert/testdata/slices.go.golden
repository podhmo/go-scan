
// Code generated by convert. DO NOT EDIT.
package slices

import (
	"context"
	"fmt"
	context "context"
	fmt "fmt"
)

// ConvertSrcToDst converts Src to Dst.
func ConvertSrcToDst(ctx context.Context, src *Src) (*Dst, error) {
	dst := &Dst{}
	{
						convertedSlice := make([]DstItem, len(src.Items))
						for i, item := range src.Items {
							converted, err := ConvertSrcItemToDstItem(ctx, &item)
							if err != nil {
								// TODO: proper error handling
								return nil, err
							}
							convertedSlice[i] = *converted
						}
						dst.Items = convertedSlice
					}
	return dst, nil // TODO: error handling
}
// ConvertSrcItemToDstItem converts SrcItem to DstItem.
func ConvertSrcItemToDstItem(ctx context.Context, src *SrcItem) (*DstItem, error) {
	dst := &DstItem{}
	dst.Value = src.Value
	return dst, nil // TODO: error handling
}
