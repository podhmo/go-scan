
// Code generated by convert. DO NOT EDIT.
package mapkeys

import (
	"context"
	"errors"
	"fmt"
	"example.com/convert/model"
	context "context"
	fmt "fmt"
)

func convertSrcToDst(ec *model.ErrorCollector, src *Src) *Dst {
	if src == nil {
		return nil
	}
	dst := &Dst{}
	if ec.MaxErrorsReached() { return dst }
	ec.Enter("Data")
	{
	convertedMap := make(map[string]string, len(src.Data))
	for key, value := range src.Data {
		ec.Enter(fmt.Sprintf("[%v]", key))
		convertedMap[key] = value
		ec.Leave()
	}
	dst.Data = convertedMap
}
	ec.Leave()
	return dst
}

// ConvertSrcToDst converts Src to Dst.
func ConvertSrcToDst(ctx context.Context, src *Src) (*Dst, error) {
	if src == nil {
		return nil, nil
	}
	ec := model.NewErrorCollector(0)
	dst := convertSrcToDst(ec, src)
	if ec.HasErrors() {
		return dst, errors.Join(ec.Errors()...)
	}
	return dst, nil
}
