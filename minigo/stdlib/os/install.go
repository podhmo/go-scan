// Code generated by minigo-gen-bindings. DO NOT EDIT.

package os

import (
	"os"
	"github.com/podhmo/go-scan/minigo"
)

// Install binds all exported symbols from the "os" package to the interpreter.
func Install(interp *minigo.Interpreter, installed map[string]bool) {
	if installed["os"] {
		return
	}
	installed["os"] = true

	interp.Register("os", map[string]any{
		"Stat": os.Stat,
		"O_WRONLY": os.O_WRONLY,
		"ModeSetgid": os.ModeSetgid,
		"StartProcess": os.StartProcess,
		"Getwd": os.Getwd,
		"MkdirTemp": os.MkdirTemp,
		"O_APPEND": os.O_APPEND,
		"ModeDir": os.ModeDir,
		"ModeCharDevice": os.ModeCharDevice,
		"OpenRoot": os.OpenRoot,
		"Getpid": os.Getpid,
		"TempDir": os.TempDir,
		"WriteFile": os.WriteFile,
		"OpenFile": os.OpenFile,
		"SameFile": os.SameFile,
		"O_CREATE": os.O_CREATE,
		"ModeSticky": os.ModeSticky,
		"Getenv": os.Getenv,
		"Pipe": os.Pipe,
		"Executable": os.Executable,
		"O_EXCL": os.O_EXCL,
		"PathListSeparator": os.PathListSeparator,
		"ModeType": os.ModeType,
		"NewSyscallError": os.NewSyscallError,
		"IsTimeout": os.IsTimeout,
		"Chtimes": os.Chtimes,
		"SEEK_SET": os.SEEK_SET,
		"SEEK_END": os.SEEK_END,
		"ModeAppend": os.ModeAppend,
		"Mkdir": os.Mkdir,
		"Getegid": os.Getegid,
		"ReadDir": os.ReadDir,
		"RemoveAll": os.RemoveAll,
		"CreateTemp": os.CreateTemp,
		"SEEK_CUR": os.SEEK_CUR,
		"ModeTemporary": os.ModeTemporary,
		"Expand": os.Expand,
		"ExpandEnv": os.ExpandEnv,
		"IsExist": os.IsExist,
		"IsPermission": os.IsPermission,
		"O_TRUNC": os.O_TRUNC,
		"Getgid": os.Getgid,
		"LookupEnv": os.LookupEnv,
		"Setenv": os.Setenv,
		"Clearenv": os.Clearenv,
		"UserHomeDir": os.UserHomeDir,
		"Lstat": os.Lstat,
		"ModeDevice": os.ModeDevice,
		"ModeIrregular": os.ModeIrregular,
		"Create": os.Create,
		"DirFS": os.DirFS,
		"Lchown": os.Lchown,
		"Getpagesize": os.Getpagesize,
		"ModeNamedPipe": os.ModeNamedPipe,
		"OpenInRoot": os.OpenInRoot,
		"NewFile": os.NewFile,
		"O_RDWR": os.O_RDWR,
		"ModeSocket": os.ModeSocket,
		"ModeSetuid": os.ModeSetuid,
		"Getuid": os.Getuid,
		"Exit": os.Exit,
		"Environ": os.Environ,
		"IsNotExist": os.IsNotExist,
		"Rename": os.Rename,
		"Truncate": os.Truncate,
		"Remove": os.Remove,
		"Symlink": os.Symlink,
		"Geteuid": os.Geteuid,
		"UserCacheDir": os.UserCacheDir,
		"Chmod": os.Chmod,
		"ReadFile": os.ReadFile,
		"DevNull": os.DevNull,
		"ModePerm": os.ModePerm,
		"Open": os.Open,
		"Readlink": os.Readlink,
		"UserConfigDir": os.UserConfigDir,
		"Chown": os.Chown,
		"IsPathSeparator": os.IsPathSeparator,
		"MkdirAll": os.MkdirAll,
		"ModeExclusive": os.ModeExclusive,
		"Unsetenv": os.Unsetenv,
		"Getppid": os.Getppid,
		"FindProcess": os.FindProcess,
		"Link": os.Link,
		"O_RDONLY": os.O_RDONLY,
		"O_SYNC": os.O_SYNC,
		"ModeSymlink": os.ModeSymlink,
		"Getgroups": os.Getgroups,
		"CopyFS": os.CopyFS,
		"Chdir": os.Chdir,
		"Hostname": os.Hostname,
		"PathSeparator": os.PathSeparator,
	})
}
