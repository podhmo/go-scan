// Code generated by minigo-gen-bindings. DO NOT EDIT.

package strconv

import (
	"strconv"
	"github.com/podhmo/go-scan/minigo"
)

// Install binds all exported symbols from the "strconv" package to the interpreter.
func Install(interp *minigo.Interpreter, installed map[string]bool) {
	if installed["strconv"] {
		return
	}
	installed["strconv"] = true

	interp.Register("strconv", map[string]any{
		"QuoteRune": strconv.QuoteRune,
		"Unquote": strconv.Unquote,
		"ParseComplex": strconv.ParseComplex,
		"ParseInt": strconv.ParseInt,
		"AppendQuoteToGraphic": strconv.AppendQuoteToGraphic,
		"UnquoteChar": strconv.UnquoteChar,
		"IsGraphic": strconv.IsGraphic,
		"ParseUint": strconv.ParseUint,
		"AppendQuote": strconv.AppendQuote,
		"AppendQuoteRuneToASCII": strconv.AppendQuoteRuneToASCII,
		"Atoi": strconv.Atoi,
		"AppendQuoteRune": strconv.AppendQuoteRune,
		"FormatBool": strconv.FormatBool,
		"FormatInt": strconv.FormatInt,
		"CanBackquote": strconv.CanBackquote,
		"Quote": strconv.Quote,
		"QuoteToGraphic": strconv.QuoteToGraphic,
		"QuoteRuneToGraphic": strconv.QuoteRuneToGraphic,
		"AppendUint": strconv.AppendUint,
		"FormatFloat": strconv.FormatFloat,
		"QuoteToASCII": strconv.QuoteToASCII,
		"IsPrint": strconv.IsPrint,
		"FormatComplex": strconv.FormatComplex,
		"Itoa": strconv.Itoa,
		"AppendInt": strconv.AppendInt,
		"AppendQuoteToASCII": strconv.AppendQuoteToASCII,
		"QuoteRuneToASCII": strconv.QuoteRuneToASCII,
		"IntSize": strconv.IntSize,
		"AppendQuoteRuneToGraphic": strconv.AppendQuoteRuneToGraphic,
		"QuotedPrefix": strconv.QuotedPrefix,
		"ParseBool": strconv.ParseBool,
		"AppendBool": strconv.AppendBool,
		"ParseFloat": strconv.ParseFloat,
		"AppendFloat": strconv.AppendFloat,
		"FormatUint": strconv.FormatUint,
	})
}
