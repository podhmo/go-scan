// Code generated by convert. DO NOT EDIT.
package tags

import (
	"context"
	"errors"
	"fmt"

	"github.com/podhmo/go-scan/examples/convert/model"
)

func convertSrcWithTagsToDstWithTags(ctx context.Context, ec *model.ErrorCollector, src *SrcWithTags) *DstWithTags {
	if src == nil {
		return nil
	}
	dst := &DstWithTags{}
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("ID")
	dst.ID = src.ID

	ec.Leave()
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("UserAge")
	dst.UserAge = src.Age

	ec.Leave()
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("Profile")
	dst.Profile = convertProfile(ctx, ec, src.Profile)

	ec.Leave()
	if ec.MaxErrorsReached() {
		return dst
	}
	ec.Enter("ManagerID")
	if src.ManagerID == nil {
		ec.Add(fmt.Errorf("ManagerID is required"))
	} else {
		if src.ManagerID != nil {
			tmp := (*src.ManagerID)
			dst.ManagerID = &tmp
		} else {
			dst.ManagerID = nil
		}
	}

	ec.Leave()
	return dst
}

// ConvertSrcWithTagsToDstWithTags converts SrcWithTags to DstWithTags.
//
// Fields that are not populated by this converter:
func ConvertSrcWithTagsToDstWithTags(ctx context.Context, src *SrcWithTags) (*DstWithTags, error) {
	if src == nil {
		return nil, nil
	}
	ec := model.NewErrorCollector(0)
	dst := convertSrcWithTagsToDstWithTags(ctx, ec, src)
	if ec.HasErrors() {
		return dst, errors.Join(ec.Errors()...)
	}
	return dst, nil
}
